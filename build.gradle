plugins {
	id 'org.springframework.boot' version '2.2.4.RELEASE'
	id 'io.spring.dependency-management' version '1.0.9.RELEASE'
	id 'java'
}

group = 'com.example'
sourceCompatibility = '1.8'

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-web'
	compile('org.springframework.boot:spring-boot-starter-data-jpa')
	compile('org.springframework.boot:spring-boot-starter-jdbc')
	implementation('org.postgresql:postgresql')
	testImplementation('org.springframework.boot:spring-boot-starter-test') {
		exclude group: 'org.junit.vintage', module: 'junit-vintage-engine'
	}
	compileOnly 'org.projectlombok:lombok:1.18.12'
	annotationProcessor 'org.projectlombok:lombok:1.18.12'
	compile group: 'org.modelmapper', name: 'modelmapper', version: '2.3.7'
	compile group: 'org.apache.logging.log4j', name: 'log4j-core', version: '2.13.1'
	compile group: 'org.apache.commons', name: 'commons-lang3', version: '3.9'
	compile group: 'commons-io', name: 'commons-io', version: '2.6'
	compile group: 'org.eclipse.jetty', name: 'jetty-util', version: '9.4.12.v20180830'
	compile group: 'io.jsonwebtoken', name: 'jjwt', version: '0.9.1'
	compile group: 'com.google.guava', name: 'guava', version: '28.2-jre'

}

test {
	useJUnitPlatform()
}




jar {
	archiveBaseName = "gs-spring-boot"
	archiveVersion = "0.1.0"
}

bootRun {
	systemProperties = System.properties
	main = "com.example.learning.LearningApplication"
}

task copyDeliverables(dependsOn: 'build') {
	doLast {
		mkdir('build/tmp/deliverable')
		copy {
			from 'build/libs'
			into 'build/tmp/deliverable'
			include '*.jar'
		}
		copy {
			from 'config'
			into 'build/tmp/deliverable/config'
			include '**/*'
		}
		copy {
			from 'files'
			into 'build/tmp/deliverable/files'
			exclude 'generated-files'
			include '**/*'
		}
	}
}

task dist(type: Zip, dependsOn: 'copyDeliverables') {
	archiveName "${project.jar.baseName}-${project.jar.version}.zip"
	from 'build/tmp/deliverable'
	include '**/*'
}









